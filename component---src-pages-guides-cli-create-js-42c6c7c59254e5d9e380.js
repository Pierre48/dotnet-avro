(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"1+7Q":function(e,t){e.exports={groupBy:function(e,t){return e.reduce((function(e,a){var n=a[t];return e.has(a[t])||e.set(n,[]),e.get(n).push(a),e}),new Map)},join:function(e,t){return e.reduce((function(e,a,n,r){return e.push(a),n<r.length-1&&e.push(t),e}),[])}}},KwlC:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var n=a("zLVn"),r=a("KQm4"),l=a("Wbzz"),s=a("q1tI"),c=a.n(s),o=a("w+gZ"),i=a("1+7Q"),m=a("oyoe");function u(e){var t=e.id,a=e.typeParameters,n=void 0===a?[]:a,l=e.methodTypeParameters,s=void 0===l?[]:l;switch(t.substring(0,2)){case"F:":case"P:":return c.a.createElement(p,{id:t},Object(m.createMemberName)(t));case"M:":var o=[c.a.createElement(p,{key:t,id:t},Object(m.createMemberName)(t))];return s&&s.length&&o.push.apply(o,["<"].concat(Object(r.a)(Object(i.join)(s,", ")),[">"])),o.push.apply(o,["("].concat(Object(r.a)(Object(i.join)(Object(m.getMethodParameters)(t).map((function(e,t){return c.a.createElement(u,{key:t,id:"T:"+e,typeParameters:n,methodTypeParameters:s})})),", ")),[")"])),o;case"T:":var h=t.match(/^T:`(\d+)$/),d=t.match(/^T:``(\d+)$/);if(h)return n[h[1]]||"";if(d)return s[d[1]]||"";var E=[c.a.createElement(p,{key:t,id:t},Object(m.createTypeName)(t))],y=Object(m.getTypeParameters)(t),b=t.match(/^T:(.+)`(\d+)$/);return(y||b)&&(E.push("<"),y&&E.push.apply(E,Object(r.a)(Object(i.join)(y.map((function(e,t){return c.a.createElement(u,{key:t,id:"T:"+e,typeParameters:n,methodTypeParameters:s})})),", "))),b&&(t=b[1],E.push(new Array(+b[2]).join(","))),E.push(">")),E.push(Object(m.getTypeSuffix)(t)),E;default:return c.a.createElement(p,{id:t},t.substring(2))}}function p(e){var t=e.children,a=e.id;return/^[EFMNPT]:Chr\.Avro/.test(a)?c.a.createElement(l.a,{to:"/api/"+Object(m.createDocfxUrl)(a).toLowerCase()},t):/^[EFMNPT]:Confluent\.(?:Kafka|SchemaRegistry)/.test(a)?c.a.createElement(o.a,{to:"https://docs.confluent.io/current/clients/confluent-kafka-dotnet/api/"+Object(m.createDocfxUrl)(a)+".html"},t):/^[EFMNPT]:(?:Microsoft|System)/.test(a)?c.a.createElement(o.a,{to:"https://docs.microsoft.com/en-us/dotnet/api/"+Object(m.createDocfxUrl)(a).toLowerCase()},t):t}function h(e){var t=e.children,a=e.id,r=e.typeParameters,l=e.methodTypeParameters,s=Object(n.a)(e,["children","id","typeParameters","methodTypeParameters"]);return t?c.a.createElement(p,Object.assign({id:a},s),t):c.a.createElement("code",s,c.a.createElement(u,{id:a,typeParameters:r,methodTypeParameters:l}))}},hOb7:function(e,t,a){"use strict";a.r(t);var n=a("Wbzz"),r=a("q1tI"),l=a.n(r),s=a("qhky"),c=a("rCNW"),o=a("KwlC"),i=a("w+gZ"),m="Creating schemas from .NET types";t.default=function(){var e=Object(n.d)("4092712757").site.siteMetadata,t=e.latestRelease,a=e.projectName;return l.a.createElement(l.a.Fragment,null,l.a.createElement(s.a,null,l.a.createElement("title",null,m)),l.a.createElement("h1",null,m),l.a.createElement("p",null,"Creating schemas from complex .NET types is a time-saving way to get started with Avro. ",a," recognizes most commonly used types and supports classes, structs, and enums, so it’s usually possible to get a working schema with no additional manipulation."),l.a.createElement("p",null,"For detailed information about how types are matched to schemas, see the ",l.a.createElement(n.a,{to:"/internals/mapping"},"types and conversions")," documentation."),l.a.createElement("h2",null,"Getting started"),l.a.createElement("p",null,"If you haven’t already, install the ",a," CLI:"),l.a.createElement(c.a,{language:"bash"},"$ dotnet tool install Chr.Avro.Cli --global\n  Tool 'chr.avro.cli' (version '"+t+"') was successfully installed."),l.a.createElement("p",null,"After the CLI tool has been installed, you can invoke it using ",l.a.createElement("code",null,"dotnet avro"),". If the install command fails, make sure you have the latest version of the ",l.a.createElement(i.a,{to:"https://dotnet.microsoft.com/download"},".NET Core SDK")," installed."),l.a.createElement("h2",null,"Using the CLI"),l.a.createElement("p",null,"To create a schema for a type, use the ",l.a.createElement(n.a,{to:"/cli#create"},l.a.createElement(c.a,{inline:!0,language:"bash"},"create"))," command. You’ll need to provide the type’s full name as well as the path to a compiled assembly that contains it:"),l.a.createElement(c.a,{language:"bash"},'$ dotnet avro create --type ExampleNamespace.ExampleLibrary.ExampleClass --assembly bin/Debug/netstandard2.0/ExampleNamespace.ExampleLibrary.dll\n{"name":"ExampleNamespace.ExampleLibrary.ExampleClass","type":"record","fields":[{"name":"ExampleProperty","type":"int"}]}'),l.a.createElement("h2",null,"Customizing generated schemas"),l.a.createElement("p",null,"The CLI ships with some convenience options:"),l.a.createElement("ul",null,l.a.createElement("li",null,l.a.createElement("p",null,"The ",l.a.createElement("strong",null,l.a.createElement("code",null,"--nullable-references"))," option causes all reference types to be written as nullable unions. This is useful when you prefer to keep .NET’s nullable semantics.")),l.a.createElement("li",null,l.a.createElement("p",null,"The ",l.a.createElement("strong",null,l.a.createElement("code",null,"--enums-as-integers"))," option causes enums to be represented as ",l.a.createElement(c.a,{inline:!0,language:"avro"},'"int"')," or ",l.a.createElement(c.a,{inline:!0,language:"avro"},'"long"')," schemas instead of ",l.a.createElement(c.a,{inline:!0,language:"avro"},'"enum"')," schemas."))),l.a.createElement("p",null,a," also recognizes ",l.a.createElement(o.a,{id:"T:System.Runtime.Serialization.DataContractAttribute"},"data contract attributes"),", which can be used to customize names."),l.a.createElement("p",null,"If you need to make more complicated modifications to a generated schema, you can customize the schema creation process in code:"),l.a.createElement(c.a,{language:"csharp"},"using Chr.Avro.Abstract;\nusing Chr.Avro.Representation;\nusing System;\n\nnamespace Chr.Avro.Examples.SchemaCustomization\n{\n    public class ExampleClass\n    {\n        public int NumericProperty { get; set; }\n    }\n\n    public class Program\n    {\n        public static void Main(string[] args)\n        {\n            var builder = new SchemaBuilder();\n            var schema = builder.BuildSchema<ExampleClass>(); // a RecordSchema instance\n\n            // do modifications here\n\n            var writer = new JsonSchemaWriter();\n            Console.WriteLine(writer.Write(schema));\n        }\n    }\n}"))}}}]);
//# sourceMappingURL=component---src-pages-guides-cli-create-js-42c6c7c59254e5d9e380.js.map