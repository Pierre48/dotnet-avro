{"componentChunkName":"component---src-templates-dotnet-member-js","path":"/api/chr.avro.serialization.recorddeserializerbuildercase.createsurrogatetype","result":{"data":{"dotnetMember":{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.CreateSurrogateType","kind":"method","name":"CreateSurrogateType","overloads":[{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.CreateSurrogateType(Chr.Avro.Abstract.Schema)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"protected virtual Type CreateSurrogateType (Chr.Avro.Abstract.Schema schema);"},{"language":"ILAsm","value":".method familyhidebysig newslot virtual instance class System.Type CreateSurrogateType(class Chr.Avro.Abstract.Schema schema) cil managed"}],"parameters":[{"name":"schema","summary":"The schema to select a compatible type for.","type":"T:Chr.Avro.Abstract.Schema"}],"remarks":null,"returns":{"summary":"<see cref=\"T:System.Collections.Generic.IEnumerable`1\" /> if the schema is an array schema (or a union schema\n            containing only array/null schemas), <see cref=\"T:System.Collections.Generic.IDictionary`2\" /> if the\n            schema is a map schema (or a union schema containing only map/null schemas), and\n            <see cref=\"T:System.Object\" /> otherwise.","type":"T:System.Type"},"summary":"Creates a type that can be used to deserialize missing record fields.","typeParameters":null}],"type":{"id":"T:Chr.Avro.Serialization.RecordDeserializerBuilderCase","kind":"class","name":"RecordDeserializerBuilderCase","namespace":{"id":"N:Chr.Avro.Serialization","name":"Chr.Avro.Serialization"},"typeParameters":null}}},"pageContext":{"id":"M:Chr.Avro.Serialization.RecordDeserializerBuilderCase.CreateSurrogateType"}},"staticQueryHashes":["2742782950","828541920"]}