{"componentChunkName":"component---src-templates-dotnet-type-js","path":"/api/chr.avro.representation.recordjsonschemareadercase","result":{"data":{"dotnetType":{"base":"T:Chr.Avro.Representation.NamedJsonSchemaReaderCase","kind":"class","interfaces":[],"name":"RecordJsonSchemaReaderCase","remarks":null,"summary":"A JSON schema reader case that matches record schemas.","assembly":{"id":"A:Chr.Avro.Json"},"members":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.#ctor","kind":"constructor","name":"#ctor","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.#ctor(Chr.Avro.Representation.IJsonSchemaReader)","returns":null,"summary":"Creates a new record case.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetDoc","kind":"method","name":"GetDoc","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetDoc(System.Text.Json.JsonElement)","returns":{"summary":"To be added.","type":"T:System.String"},"summary":"Extracts the documentation field from a record schema.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFieldName","kind":"method","name":"GetFieldName","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFieldName(System.Text.Json.JsonElement)","returns":{"summary":"To be added.","type":"T:System.String"},"summary":"Extracts the name from a record field.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFields","kind":"method","name":"GetFields","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFields(System.Text.Json.JsonElement)","returns":{"summary":"To be added.","type":"T:System.Collections.Generic.IEnumerable{System.Text.Json.JsonElement}"},"summary":"Extracts the fields from a record schema.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFieldType","kind":"method","name":"GetFieldType","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.GetFieldType(System.Text.Json.JsonElement)","returns":{"summary":"To be added.","type":"T:System.Text.Json.JsonElement"},"summary":"Extracts the type from a record field.","typeParameters":null}]},{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Read","kind":"method","name":"Read","overloads":[{"id":"M:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Read(System.Text.Json.JsonElement,System.Collections.Concurrent.ConcurrentDictionary{System.String,Chr.Avro.Abstract.Schema},System.String)","returns":{"summary":"To be added.","type":"T:Chr.Avro.Representation.IJsonSchemaReadResult"},"summary":"Reads a schema from a JSON token.","typeParameters":null}]},{"id":"P:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Reader","kind":"property","name":"Reader","overloads":[{"id":"P:Chr.Avro.Representation.RecordJsonSchemaReaderCase.Reader","returns":{"summary":null,"type":"T:Chr.Avro.Representation.IJsonSchemaReader"},"summary":"A schema reader to use to resolve field types.","typeParameters":null}]}],"namespace":{"id":"N:Chr.Avro.Representation","name":"Chr.Avro.Representation"},"typeParameters":null,"typeSignatures":[{"language":"C#","value":"public class RecordJsonSchemaReaderCase : Chr.Avro.Representation.NamedJsonSchemaReaderCase"},{"language":"ILAsm","value":".class public auto ansi beforefieldinit RecordJsonSchemaReaderCase extends Chr.Avro.Representation.NamedJsonSchemaReaderCase"}]}},"pageContext":{"id":"T:Chr.Avro.Representation.RecordJsonSchemaReaderCase"}},"staticQueryHashes":["2742782950","828541920"]}