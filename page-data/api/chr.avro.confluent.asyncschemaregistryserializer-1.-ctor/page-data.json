{"componentChunkName":"component---src-templates-dotnet-member-js","path":"/api/chr.avro.confluent.asyncschemaregistryserializer-1.-ctor","result":{"data":{"dotnetMember":{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor","kind":"constructor","name":"#ctor","overloads":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Chr.Avro.Confluent.AutomaticRegistrationBehavior,Chr.Avro.Abstract.ISchemaBuilder,Chr.Avro.Representation.IJsonSchemaReader,Chr.Avro.Representation.IJsonSchemaWriter,Chr.Avro.Serialization.IBinarySerializerBuilder,System.Func{Confluent.Kafka.SerializationContext,System.String},Chr.Avro.Confluent.TombstoneBehavior)","base":null,"exceptions":[{"summary":"Thrown when the registry client is null.","type":"T:System.ArgumentNullException"}],"memberSignatures":[{"language":"C#","value":"public AsyncSchemaRegistrySerializer (Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, Chr.Avro.Confluent.AutomaticRegistrationBehavior registerAutomatically = Chr.Avro.Confluent.AutomaticRegistrationBehavior.Never, Chr.Avro.Abstract.ISchemaBuilder schemaBuilder = null, Chr.Avro.Representation.IJsonSchemaReader schemaReader = null, Chr.Avro.Representation.IJsonSchemaWriter schemaWriter = null, Chr.Avro.Serialization.IBinarySerializerBuilder serializerBuilder = null, Func<Confluent.Kafka.SerializationContext,string> subjectNameBuilder = null, Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior = Chr.Avro.Confluent.TombstoneBehavior.None);"},{"language":"ILAsm","value":".method public hidebysig specialname rtspecialname instance void .ctor(class Confluent.SchemaRegistry.ISchemaRegistryClient registryClient, valuetype Chr.Avro.Confluent.AutomaticRegistrationBehavior registerAutomatically, class Chr.Avro.Abstract.ISchemaBuilder schemaBuilder, class Chr.Avro.Representation.IJsonSchemaReader schemaReader, class Chr.Avro.Representation.IJsonSchemaWriter schemaWriter, class Chr.Avro.Serialization.IBinarySerializerBuilder serializerBuilder, class System.Func`2<valuetype Confluent.Kafka.SerializationContext, string> subjectNameBuilder, valuetype Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior) cil managed"}],"parameters":[{"name":"registryClient","summary":"The client to use for Schema Registry operations. (The client will not be disposed.)","type":"T:Confluent.SchemaRegistry.ISchemaRegistryClient"},{"name":"registerAutomatically","summary":"When to automatically register schemas that match the type being serialized.","type":"T:Chr.Avro.Confluent.AutomaticRegistrationBehavior"},{"name":"schemaBuilder","summary":"The schema builder to use to create a schema for a C# type when registering automatically.\n            If none is provided, the default schema builder will be used.","type":"T:Chr.Avro.Abstract.ISchemaBuilder"},{"name":"schemaReader","summary":"The JSON schema reader to use to convert schemas received from the registry into abstract\n            representations. If none is provided, the default schema reader will be used.","type":"T:Chr.Avro.Representation.IJsonSchemaReader"},{"name":"schemaWriter","summary":"The JSON schema writer to use to convert abstract schema representations when registering\n            automatically. If none is provided, the default schema writer will be used.","type":"T:Chr.Avro.Representation.IJsonSchemaWriter"},{"name":"serializerBuilder","summary":"The deserializer builder to use to build serialization functions for C# types. If none\n            is provided, the default serializer builder will be used.","type":"T:Chr.Avro.Serialization.IBinarySerializerBuilder"},{"name":"subjectNameBuilder","summary":"A function that determines the subject name given the topic name and a component type\n            (key or value). If none is provided, the default \"{topic name}-{component}\" naming\n            convention will be used.","type":"T:System.Func{Confluent.Kafka.SerializationContext,System.String}"},{"name":"tombstoneBehavior","summary":"The behavior of the serializer on tombstone records.","type":"T:Chr.Avro.Confluent.TombstoneBehavior"}],"remarks":null,"returns":null,"summary":"Creates a serializer.","typeParameters":null},{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}},Chr.Avro.Confluent.AutomaticRegistrationBehavior,Chr.Avro.Abstract.ISchemaBuilder,Chr.Avro.Representation.IJsonSchemaReader,Chr.Avro.Representation.IJsonSchemaWriter,Chr.Avro.Serialization.IBinarySerializerBuilder,System.Func{Confluent.Kafka.SerializationContext,System.String},Chr.Avro.Confluent.TombstoneBehavior)","base":null,"exceptions":[{"summary":"Thrown when the registry configuration is null.","type":"T:System.ArgumentNullException"}],"memberSignatures":[{"language":"C#","value":"public AsyncSchemaRegistrySerializer (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> registryConfiguration, Chr.Avro.Confluent.AutomaticRegistrationBehavior registerAutomatically = Chr.Avro.Confluent.AutomaticRegistrationBehavior.Never, Chr.Avro.Abstract.ISchemaBuilder schemaBuilder = null, Chr.Avro.Representation.IJsonSchemaReader schemaReader = null, Chr.Avro.Representation.IJsonSchemaWriter schemaWriter = null, Chr.Avro.Serialization.IBinarySerializerBuilder serializerBuilder = null, Func<Confluent.Kafka.SerializationContext,string> subjectNameBuilder = null, Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior = Chr.Avro.Confluent.TombstoneBehavior.None);"},{"language":"ILAsm","value":".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1<valuetype System.Collections.Generic.KeyValuePair`2<string, string>> registryConfiguration, valuetype Chr.Avro.Confluent.AutomaticRegistrationBehavior registerAutomatically, class Chr.Avro.Abstract.ISchemaBuilder schemaBuilder, class Chr.Avro.Representation.IJsonSchemaReader schemaReader, class Chr.Avro.Representation.IJsonSchemaWriter schemaWriter, class Chr.Avro.Serialization.IBinarySerializerBuilder serializerBuilder, class System.Func`2<valuetype Confluent.Kafka.SerializationContext, string> subjectNameBuilder, valuetype Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior) cil managed"}],"parameters":[{"name":"registryConfiguration","summary":"Schema Registry configuration. Using the <see cref=\"T:Confluent.SchemaRegistry.SchemaRegistryConfig\" /> class is\n            highly recommended.","type":"T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}}"},{"name":"registerAutomatically","summary":"When to automatically register schemas that match the type being serialized.","type":"T:Chr.Avro.Confluent.AutomaticRegistrationBehavior"},{"name":"schemaBuilder","summary":"The schema builder to use to create a schema for a C# type when registering automatically.\n            If none is provided, the default schema builder will be used.","type":"T:Chr.Avro.Abstract.ISchemaBuilder"},{"name":"schemaReader","summary":"The JSON schema reader to use to convert schemas received from the registry into abstract\n            representations. If none is provided, the default schema reader will be used.","type":"T:Chr.Avro.Representation.IJsonSchemaReader"},{"name":"schemaWriter","summary":"The JSON schema writer to use to convert abstract schema representations when registering\n            automatically. If none is provided, the default schema writer will be used.","type":"T:Chr.Avro.Representation.IJsonSchemaWriter"},{"name":"serializerBuilder","summary":"The deserializer builder to use to build serialization functions for C# types. If none\n            is provided, the default serializer builder will be used.","type":"T:Chr.Avro.Serialization.IBinarySerializerBuilder"},{"name":"subjectNameBuilder","summary":"A function that determines the subject name given the topic name and a component type\n            (key or value). If none is provided, the default \"{topic name}-{component}\" naming\n            convention will be used.","type":"T:System.Func{Confluent.Kafka.SerializationContext,System.String}"},{"name":"tombstoneBehavior","summary":"The behavior of the serializer on tombstone records.","type":"T:Chr.Avro.Confluent.TombstoneBehavior"}],"remarks":null,"returns":null,"summary":"Creates a serializer.","typeParameters":null}],"type":{"id":"T:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1","kind":"class","name":"AsyncSchemaRegistrySerializer<T>","namespace":{"id":"N:Chr.Avro.Confluent","name":"Chr.Avro.Confluent"},"typeParameters":[{"name":"T"}]}}},"pageContext":{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor"}},"staticQueryHashes":["2742782950","828541920"]}