{"componentChunkName":"component---src-templates-dotnet-type-js","path":"/api/chr.avro.confluent.asyncschemaregistryserializer-1","result":{"data":{"dotnetType":{"base":"T:System.Object","kind":"class","interfaces":["T:Confluent.Kafka.IAsyncSerializer{`0}"],"name":"AsyncSchemaRegistrySerializer<T>","remarks":"By default, when serializing keys for a topic with name \"test_topic\", this deserializer\n            would query the Schema Registry for subject \"test_topic-key\". (This is a Confluent\n            conventionâ€”values would be \"test_topic-value\".)","summary":"An <see cref=\"T:Confluent.Kafka.IAsyncSerializer`1\" /> that resolves Avro schemas on the fly. When serializing\n            messages, this serializer will attempt to look up a subject that matches the topic name (if\n            not already cached).","assembly":{"id":"A:Chr.Avro.Confluent"},"members":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor","kind":"constructor","name":"#ctor","overloads":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor(Confluent.SchemaRegistry.ISchemaRegistryClient,Chr.Avro.Confluent.AutomaticRegistrationBehavior,Chr.Avro.Abstract.ISchemaBuilder,Chr.Avro.Representation.IJsonSchemaReader,Chr.Avro.Representation.IJsonSchemaWriter,Chr.Avro.Serialization.IBinarySerializerBuilder,System.Func{Confluent.Kafka.SerializationContext,System.String},Chr.Avro.Confluent.TombstoneBehavior)","returns":null,"summary":"Creates a serializer.","typeParameters":null},{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String}},Chr.Avro.Confluent.AutomaticRegistrationBehavior,Chr.Avro.Abstract.ISchemaBuilder,Chr.Avro.Representation.IJsonSchemaReader,Chr.Avro.Representation.IJsonSchemaWriter,Chr.Avro.Serialization.IBinarySerializerBuilder,System.Func{Confluent.Kafka.SerializationContext,System.String},Chr.Avro.Confluent.TombstoneBehavior)","returns":null,"summary":"Creates a serializer.","typeParameters":null}]},{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.Build","kind":"method","name":"Build","overloads":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.Build(System.Int32,Chr.Avro.Abstract.Schema)","returns":{"summary":"To be added.","type":"T:System.Func{`0,System.Byte[]}"},"summary":"Builds a serializer for the Confluent wire format.","typeParameters":null}]},{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.RegisterAutomatically","kind":"property","name":"RegisterAutomatically","overloads":[{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.RegisterAutomatically","returns":{"summary":null,"type":"T:Chr.Avro.Confluent.AutomaticRegistrationBehavior"},"summary":"Whether to automatically register schemas that match the type being serialized.","typeParameters":null}]},{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SchemaBuilder","kind":"property","name":"SchemaBuilder","overloads":[{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SchemaBuilder","returns":{"summary":null,"type":"T:Chr.Avro.Abstract.ISchemaBuilder"},"summary":"The schema builder used to create a schema for a C# type when registering automatically.","typeParameters":null}]},{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SchemaReader","kind":"property","name":"SchemaReader","overloads":[{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SchemaReader","returns":{"summary":null,"type":"T:Chr.Avro.Representation.IJsonSchemaReader"},"summary":"The JSON schema reader used to convert schemas received from the registry into abstract\n            representations.","typeParameters":null}]},{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SchemaWriter","kind":"property","name":"SchemaWriter","overloads":[{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SchemaWriter","returns":{"summary":null,"type":"T:Chr.Avro.Representation.IJsonSchemaWriter"},"summary":"The JSON schema writer used to convert abstract schema representations when registering\n            automatically.","typeParameters":null}]},{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SerializeAsync","kind":"method","name":"SerializeAsync","overloads":[{"id":"M:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SerializeAsync(`0,Confluent.Kafka.SerializationContext)","returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{System.Byte[]}"},"summary":"Serialize a message. (See <see cref=\"M:Confluent.Kafka.IAsyncSerializer`1.SerializeAsync(`0,Confluent.Kafka.SerializationContext)\" />.)","typeParameters":null}]},{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SerializerBuilder","kind":"property","name":"SerializerBuilder","overloads":[{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SerializerBuilder","returns":{"summary":null,"type":"T:Chr.Avro.Serialization.IBinarySerializerBuilder"},"summary":"The deserializer builder to use to build serialization functions for C# types.","typeParameters":null}]},{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SubjectNameBuilder","kind":"property","name":"SubjectNameBuilder","overloads":[{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.SubjectNameBuilder","returns":{"summary":null,"type":"T:System.Func{Confluent.Kafka.SerializationContext,System.String}"},"summary":"A function that determines the subject name given the topic name and a component type\n            (key or value).","typeParameters":null}]},{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.TombstoneBehavior","kind":"property","name":"TombstoneBehavior","overloads":[{"id":"P:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1.TombstoneBehavior","returns":{"summary":null,"type":"T:Chr.Avro.Confluent.TombstoneBehavior"},"summary":"The behavior of the serializer on tombstone records.","typeParameters":null}]}],"namespace":{"id":"N:Chr.Avro.Confluent","name":"Chr.Avro.Confluent"},"typeParameters":[{"name":"T"}],"typeSignatures":[{"language":"C#","value":"public class AsyncSchemaRegistrySerializer<T> : Confluent.Kafka.IAsyncSerializer<T>"},{"language":"ILAsm","value":".class public auto ansi beforefieldinit AsyncSchemaRegistrySerializer`1<T> extends System.Object implements class Confluent.Kafka.IAsyncSerializer`1<!T>"}]}},"pageContext":{"id":"T:Chr.Avro.Confluent.AsyncSchemaRegistrySerializer`1"}},"staticQueryHashes":["2742782950","828541920"]}