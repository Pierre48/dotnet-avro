{"componentChunkName":"component---src-templates-dotnet-member-js","path":"/api/chr.avro.resolution.reflectionresolver.createreflectioncasebuilders","result":{"data":{"dotnetMember":{"id":"M:Chr.Avro.Resolution.ReflectionResolver.CreateReflectionCaseBuilders","kind":"method","name":"CreateReflectionCaseBuilders","overloads":[{"id":"M:Chr.Avro.Resolution.ReflectionResolver.CreateReflectionCaseBuilders(System.Reflection.BindingFlags,System.Boolean)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"public static System.Collections.Generic.IEnumerable<Func<Chr.Avro.Resolution.ITypeResolver,Chr.Avro.Resolution.ITypeResolverCase>> CreateReflectionCaseBuilders (System.Reflection.BindingFlags memberVisibility, bool resolveUnderlyingEnumTypes);"},{"language":"ILAsm","value":".method public static hidebysig class System.Collections.Generic.IEnumerable`1<class System.Func`2<class Chr.Avro.Resolution.ITypeResolver, class Chr.Avro.Resolution.ITypeResolverCase>> CreateReflectionCaseBuilders(valuetype System.Reflection.BindingFlags memberVisibility, bool resolveUnderlyingEnumTypes) cil managed"}],"parameters":[{"name":"memberVisibility","summary":"The binding flags that will be used to select fields and properties.","type":"T:System.Reflection.BindingFlags"},{"name":"resolveUnderlyingEnumTypes","summary":"Whether to resolve enum types as their underlying integral types.","type":"T:System.Boolean"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Collections.Generic.IEnumerable{System.Func{Chr.Avro.Resolution.ITypeResolver,Chr.Avro.Resolution.ITypeResolverCase}}"},"summary":"Creates a default list of case builders.","typeParameters":null}],"type":{"id":"T:Chr.Avro.Resolution.ReflectionResolver","kind":"class","name":"ReflectionResolver","namespace":{"id":"N:Chr.Avro.Resolution","name":"Chr.Avro.Resolution"},"typeParameters":null}}},"pageContext":{"id":"M:Chr.Avro.Resolution.ReflectionResolver.CreateReflectionCaseBuilders"}},"staticQueryHashes":["2742782950","828541920"]}