{"componentChunkName":"component---src-templates-dotnet-member-js","path":"/api/chr.avro.confluent.schemaregistryserializerbuilder.build-1","result":{"data":{"dotnetMember":{"id":"M:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder.Build``1","kind":"method","name":"Build<T>","overloads":[{"id":"M:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder.Build``1(System.Int32,Chr.Avro.Confluent.TombstoneBehavior)","base":"M:Chr.Avro.Confluent.ISchemaRegistrySerializerBuilder.Build``1(System.Int32,Chr.Avro.Confluent.TombstoneBehavior)","exceptions":[{"summary":"Thrown when the type is incompatible with the retrieved schema.","type":"T:System.AggregateException"}],"memberSignatures":[{"language":"C#","value":"public System.Threading.Tasks.Task<Confluent.Kafka.ISerializer<T>> Build<T> (int id, Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior = Chr.Avro.Confluent.TombstoneBehavior.None);"},{"language":"ILAsm","value":".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1<class Confluent.Kafka.ISerializer`1<!!T>> Build<T>(int32 id, valuetype Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior) cil managed"}],"parameters":[{"name":"id","summary":"The ID of the schema that should be used to serialize data.","type":"T:System.Int32"},{"name":"tombstoneBehavior","summary":"The behavior of the serializer on tombstone records.","type":"T:Chr.Avro.Confluent.TombstoneBehavior"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ISerializer{``0}}"},"summary":"Builds a serializer for a specific schema.","typeParameters":[{"name":"T","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder.Build``1(System.Int32,System.String,Chr.Avro.Confluent.TombstoneBehavior)","base":null,"exceptions":null,"memberSignatures":[{"language":"C#","value":"protected virtual Confluent.Kafka.ISerializer<T> Build<T> (int id, string json, Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior);"},{"language":"ILAsm","value":".method familyhidebysig newslot virtual instance class Confluent.Kafka.ISerializer`1<!!T> Build<T>(int32 id, string json, valuetype Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior) cil managed"}],"parameters":[{"name":"id","summary":"A schema ID to include in each serialized payload.","type":"T:System.Int32"},{"name":"json","summary":"The schema to build the Avro serializer from.","type":"T:System.String"},{"name":"tombstoneBehavior","summary":"The behavior of the serializer on tombstone records.","type":"T:Chr.Avro.Confluent.TombstoneBehavior"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:Confluent.Kafka.ISerializer{``0}"},"summary":"Builds a serializer for the Confluent wire format.","typeParameters":[{"name":"T","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder.Build``1(System.String,Chr.Avro.Confluent.AutomaticRegistrationBehavior,Chr.Avro.Confluent.TombstoneBehavior)","base":"M:Chr.Avro.Confluent.ISchemaRegistrySerializerBuilder.Build``1(System.String,Chr.Avro.Confluent.AutomaticRegistrationBehavior,Chr.Avro.Confluent.TombstoneBehavior)","exceptions":[{"summary":"Thrown when the type is incompatible with the retrieved schema or a matching schema\n            cannot be generated.","type":"T:System.AggregateException"}],"memberSignatures":[{"language":"C#","value":"public System.Threading.Tasks.Task<Confluent.Kafka.ISerializer<T>> Build<T> (string subject, Chr.Avro.Confluent.AutomaticRegistrationBehavior registerAutomatically = Chr.Avro.Confluent.AutomaticRegistrationBehavior.Never, Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior = Chr.Avro.Confluent.TombstoneBehavior.None);"},{"language":"ILAsm","value":".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1<class Confluent.Kafka.ISerializer`1<!!T>> Build<T>(string subject, valuetype Chr.Avro.Confluent.AutomaticRegistrationBehavior registerAutomatically, valuetype Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior) cil managed"}],"parameters":[{"name":"subject","summary":"The subject of the schema that should be used to serialize data. The latest version of\n            the subject will be resolved.","type":"T:System.String"},{"name":"registerAutomatically","summary":"When to automatically register a schema that matches <typeparamref name=\"T\" />.","type":"T:Chr.Avro.Confluent.AutomaticRegistrationBehavior"},{"name":"tombstoneBehavior","summary":"The behavior of the serializer on tombstone records.","type":"T:Chr.Avro.Confluent.TombstoneBehavior"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ISerializer{``0}}"},"summary":"Builds a serializer for a specific schema.","typeParameters":[{"name":"T","summary":"To be added."}]},{"id":"M:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder.Build``1(System.String,System.Int32,Chr.Avro.Confluent.TombstoneBehavior)","base":"M:Chr.Avro.Confluent.ISchemaRegistrySerializerBuilder.Build``1(System.String,System.Int32,Chr.Avro.Confluent.TombstoneBehavior)","exceptions":[{"summary":"Thrown when the type is incompatible with the retrieved schema.","type":"T:System.AggregateException"}],"memberSignatures":[{"language":"C#","value":"public virtual System.Threading.Tasks.Task<Confluent.Kafka.ISerializer<T>> Build<T> (string subject, int version, Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior = Chr.Avro.Confluent.TombstoneBehavior.None);"},{"language":"ILAsm","value":".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1<class Confluent.Kafka.ISerializer`1<!!T>> Build<T>(string subject, int32 version, valuetype Chr.Avro.Confluent.TombstoneBehavior tombstoneBehavior) cil managed"}],"parameters":[{"name":"subject","summary":"The subject of the schema that should be used to serialize data.","type":"T:System.String"},{"name":"version","summary":"The version of the subject to be resolved.","type":"T:System.Int32"},{"name":"tombstoneBehavior","summary":"The behavior of the serializer on tombstone records.","type":"T:Chr.Avro.Confluent.TombstoneBehavior"}],"remarks":null,"returns":{"summary":"To be added.","type":"T:System.Threading.Tasks.Task{Confluent.Kafka.ISerializer{``0}}"},"summary":"Builds a serializer for a specific schema.","typeParameters":[{"name":"T","summary":"To be added."}]}],"type":{"id":"T:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder","kind":"class","name":"SchemaRegistrySerializerBuilder","namespace":{"id":"N:Chr.Avro.Confluent","name":"Chr.Avro.Confluent"},"typeParameters":null}}},"pageContext":{"id":"M:Chr.Avro.Confluent.SchemaRegistrySerializerBuilder.Build``1"}},"staticQueryHashes":["2742782950","828541920"]}