{"version":3,"sources":["webpack:///./src/components/dotnet/type-table.js","webpack:///./src/components/dotnet/namespace-detail.js","webpack:///./src/templates/dotnet-namespace.js"],"names":["types","length","map","type","key","id","xml","summary","namespace","classes","filter","t","kind","interfaces","query","dotnetNamespace","data","Helmet","name","to","className","styles","title"],"mappings":"kNAKe,kBAAGA,EAAH,EAAGA,MAAH,OACbA,EAAMC,OAAS,GAAKD,EAAME,KAAI,SAAAC,GAAI,OAChC,kBAAC,WAAD,CAAUC,IAAKD,EAAKE,IAClB,4BACE,kBAAC,IAAD,CAAiBA,GAAIF,EAAKE,MAE5B,kBAAC,IAAD,CAAQC,IAAKH,EAAKI,eCNT,cAAoB,IAAjBC,EAAgB,EAAhBA,UACRD,EAAYC,EAAZD,QACFE,EAAUD,EAAUR,MAAMU,QAAO,SAAAC,GAAC,MAAe,UAAXA,EAAEC,QACxCC,EAAaL,EAAUR,MAAMU,QAAO,SAAAC,GAAC,MAAe,cAAXA,EAAEC,QAEjD,OACE,oCACGL,GACC,kBAAC,IAAD,CAAQD,IAAKC,IAGdE,EAAQR,OAAS,GAChB,oCACE,uCACA,kBAAC,EAAD,CAAWD,MAAOS,KAIrBI,EAAWZ,OAAS,GACnB,oCACE,0CACA,kBAAC,EAAD,CAAWD,MAAOa,O,iCCAfC,GAjBE,0BAAWC,EAAX,EAAGC,KAAQD,gBAAX,OACb,oCACE,kBAACE,EAAA,EAAD,KACE,+BAAWF,EAAgBG,KAA3B,eAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,QAAT,kBAGF,wBAAIC,UAAWC,IAAOC,OACpB,8BAAOP,EAAgBG,MADzB,cAIA,kBAAC,EAAD,CAAiBV,UAAWO,MAGd","file":"component---src-templates-dotnet-namespace-js-ff63ed0b2ec2417eb708.js","sourcesContent":["import React, { Fragment } from 'react'\n\nimport XmlDoc from '../dotnet/xml-doc'\nimport DotnetReference from '../references/dotnet'\n\nexport default ({ types }) =>\n  types.length > 0 && types.map(type =>\n    <Fragment key={type.id}>\n      <h5>\n        <DotnetReference id={type.id} />\n      </h5>\n      <XmlDoc xml={type.summary} />\n    </Fragment>\n  )\n","import React from 'react'\n\nimport TypeTable from './type-table'\nimport XmlDoc from './xml-doc'\n\nexport default ({ namespace }) => {\n  const { summary } = namespace\n  const classes = namespace.types.filter(t => t.kind === 'class')\n  const interfaces = namespace.types.filter(t => t.kind === 'interface')\n\n  return (\n    <>\n      {summary &&\n        <XmlDoc xml={summary} />\n      }\n\n      {classes.length > 0 &&\n        <>\n          <h3>Classes</h3>\n          <TypeTable types={classes} />\n        </>\n      }\n\n      {interfaces.length > 0 &&\n        <>\n          <h3>Interfaces</h3>\n          <TypeTable types={interfaces} />\n        </>\n      }\n    </>\n  )\n}\n","import { Link, graphql } from 'gatsby'\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\n\nimport NamespaceDetail from '../components/dotnet/namespace-detail'\nimport Breadcrumb from '../components/site/breadcrumb'\n\nimport styles from './dotnet.module.scss'\n\nexport default ({ data: { dotnetNamespace }}) =>\n  <>\n    <Helmet>\n      <title>{`${dotnetNamespace.name} namespace`}</title>\n    </Helmet>\n\n    <Breadcrumb>\n      <Link to='/api'>API reference</Link>\n    </Breadcrumb>\n\n    <h1 className={styles.title}>\n      <code>{dotnetNamespace.name}</code> namespace\n    </h1>\n\n    <NamespaceDetail namespace={dotnetNamespace} />\n  </>\n\nexport const query = graphql`\n  query DotnetNamespaceDetailQuery($id: String!) {\n    dotnetNamespace(id: { eq: $id }) {\n      id\n      name\n      types {\n        id\n        kind\n        name\n        namespace {\n          id\n        }\n        summary\n      }\n    }\n  }\n`\n"],"sourceRoot":""}